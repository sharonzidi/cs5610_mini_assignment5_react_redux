{"ast":null,"code":"var _jsxFileName = \"/Users/sharonxia/github/cs5610_web_development/mini_assignment/zidi_xia_ma5/src/Square.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './Square.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Square(props) {\n  _s();\n\n  const symbol = props.symbol;\n  let color = 'white';\n\n  if (symbol === '') {\n    color = 'white';\n  } else if (symbol === ' ') {\n    color = 'black';\n  }\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => dispatch({\n      type: 'boardClick',\n      x: props.x,\n      y: props.y\n    }),\n    id: \"square\",\n    children: symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n} // class = {color}\n\n_s(Square, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/sharonxia/github/cs5610_web_development/mini_assignment/zidi_xia_ma5/src/Square.jsx"],"names":["React","useDispatch","Square","props","symbol","color","dispatch","type","x","y"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,cAAP;;AAEA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAC1B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,MAAIC,KAAK,GAAG,OAAZ;;AACA,MAAID,MAAM,KAAK,EAAf,EAAmB;AACfC,IAAAA,KAAK,GAAG,OAAR;AACH,GAFD,MAEO,IAAID,MAAM,KAAK,GAAf,EAAoB;AACvBC,IAAAA,KAAK,GAAG,OAAR;AACH;;AAED,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,sBAAQ;AAAK,IAAA,OAAO,EAAI,MAAMK,QAAQ,CAClC;AACAC,MAAAA,IAAI,EAAE,YADN;AAEAC,MAAAA,CAAC,EAAEL,KAAK,CAACK,CAFT;AAGAC,MAAAA,CAAC,EAAEN,KAAK,CAACM;AAHT,KADkC,CAA9B;AAOL,IAAA,EAAE,EAAG,QAPA;AAAA,cAQHL;AARG;AAAA;AAAA;AAAA;AAAA,UAAR;AAUH,C,CAED;;GAvBgBF,M;UASKD,W;;;KATLC,M","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './Square.css';\n\nexport function Square(props) {\n    const symbol = props.symbol;\n    let color = 'white';\n    if (symbol === '') {\n        color = 'white';\n    } else if (symbol === ' ') {\n        color = 'black';\n    }\n\n    const dispatch = useDispatch();\n    \n    return (<div onClick = {() => dispatch(\n        {\n        type: 'boardClick',\n        x: props.x,\n        y: props.y,\n\n        }\n    )} id = \"square\" >\n        {symbol}\n    </div>);\n}\n\n// class = {color}\n\n"]},"metadata":{},"sourceType":"module"}